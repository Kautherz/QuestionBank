<project name="QuestionBankBuild" basedir="." default="jar">
<property name="project-name" value="questionbank"/>
<property name="src.dir" value="./questionbank/src/main"/>
<property name="test.dir" value="./questionbank/src/test"/>
<property name="tools.dir" value="./questionbank/tools"/>
<property name="lib.dir" value="$./lib"/>
<property name="build.dir" value="build"/>
<property name="classes.dir" value="${build.dir}/classes"/>
<property name="test.classes.dir" value="${build.dir}/test-classes"/>
<property name="report.dir" value="${build.dir}/reports"/>
<property name="dist.dir" value="${build.dir}/dist"/>
<property name="main-class" value="java.com.agileteamproject2021.questionbank.App"/>
<property name="findbugs.home" value="${tools.dir}/findbugs"/>

<path id="project.class.path">
  <pathelement location="questionbank/lib/junit-4.12.jar"/>  
  <pathelement location="questionbank/lib/hamcrest-core-1.3.jar"/>
  <pathelement location="${classes.dir}"/>
  <pathelement location="${test.classes.dir}"/>
</path>

<target name="clean" description="cleans up earlier built files and directories">
	<echo message="Deleting ${build.dir} ..."/>
	<delete dir="${build.dir}"/>
</target>

<target name="compile_src" description="compiles source code only">
	<echo message="Compiling src ..."/>
	<mkdir dir="${classes.dir}"/>
	<javac srcdir="${src.dir}" destdir="${classes.dir}"/>
	<echo message="DONE."/>
</target>

<target name="compile_tests" depends="compile_src" description="compiles test code only">
	<echo message="Compiling tests ..."/>
	<mkdir dir="${test.classes.dir}"/>
	<javac 
		srcdir="${test.dir}" 
		destdir="${test.classes.dir}"
		classpathref="project.class.path" 
	/>
	<echo message="DONE."/>
</target>

<target name="run_tests" depends="compile_tests" description="executes all the tests">
	<echo message="Executing JUnit tests ..."/>
	<mkdir dir="${report.dir}"/>
 
 	<junit printsummary="yes" haltonfailure="no"> 

 	<classpath refid="project.class.path"/>	

	<formatter type="xml" />
	<formatter type="plain" />

	<batchtest fork="yes" todir="${report.dir}">
		<fileset dir="${test.dir}">
			<include name="**/*Test*.java" />
		</fileset>
	</batchtest>

   </junit>
  
  	<echo message="DONE."/>
</target>


<target name="jar" depends="run_tests" description="creates executable jar for deployment">
	<echo message="Creating jar for deployment ..."/>
	<mkdir dir="${dist.dir}"/>
	<jar destfile="${dist.dir}/${project-name}.jar" basedir="${classes.dir}">
	<manifest>
		<attribute name="Main-Class" value="${main-class}"/>
	</manifest>
    </jar>
    <echo message="DONE."/>
</target>

<target name="run" depends="jar" description="executes the application [to be used only for system-level test]">
	<java jar="${dist.dir}/${project-name}.jar" fork="true"/>
</target>


<target name="findbugs" depends="jar" description="operates findbugs tool's static analysis">
	<taskdef name="findbugs" 
		classpath="${findbugs.home}/lib/findbugs-ant.jar" 
		classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
	/>
	<mkdir dir="${report.dir}"/> 
    <findbugs home="${findbugs.home}"
              output="xml"
              outputFile="${report.dir}/findbugs_output.xml" >      
      <sourcePath path="${src.dir}" />
      <class location="${classes.dir}" />
    </findbugs>
  </target>

</project>